{"version":3,"sources":["Components/MultiSelectDropDown/DropdownMultiselect.js","Components/GalleryNavBar/GalleryNavBar.js","Components/ActorCard/ActorCard.js","Components/ActorsGallery/ActorsGallery.js","Components/ActorCard/ActorClass.js","Components/ActorsGallery/ActorsGalleryData.js","App.js","reportWebVitals.js","index.js"],"names":["DropDownMultiSelect","props","handleChange","options","key","label","name","placeholder","handleOnChange","selected","React","Component","GalleryNavBar","onChange","onSelect","Navbar","collapseOnSelect","expand","bg","variant","Brand","className","icon","Toggle","aria-controls","Collapse","id","Nav","InputGroup","data-testid","e","target","value","trim","length","Prepend","Text","FormControl","aria-label","aria-describedby","criteria","selection","Array","fill","forEach","criterion","ActorCard","fname","lname","imgsrc","born","age","Card","Header","Title","onClick","title","innerText","split","window","open","concat","Img","src","alt","Body","ActorsGallery","actors","pathPre","rowSize","useState","searchPattern","setSearchPatter","sortFields","setSortFields","regexp","RegExp","replace","actorsDataFiltered","filter","actor","test","sort","actor1","actor2","isSortByFName","isSortByLName","isSortByAge","sortOrder","sortResult","sortStrings","sortAny","map","Col","uuidv4","actorsData2Display","_","chunk","columns","Row","str1","str2","Container","Actor","this","calcAge","re","matchGroups","res","match","Date","now","parse","getFullYear","actorsData","library","add","fab","faCheckSquare","faCoffee","faFilm","App","ActorClass","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da0fe2f6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport DropdownMultiselect from \"react-multiselect-dropdown-bootstrap\";\r\n\r\nexport default class DropDownMultiSelect extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = props.handleChange;\r\n  }\r\n  render() {\r\n    const optionsArray = [\r\n      { key: 0, label: \"First Name\" },\r\n      { key: 1, label: \"Last Name\" },\r\n      { key: 2, label: \"Age\" },\r\n      { key: 3, label: \"Descending\" },\r\n    ];\r\n\r\n    return (\r\n      <DropdownMultiselect\r\n        options={optionsArray}\r\n        name=\"sort-criteria\"\r\n        placeholder=\"Sort By:\"\r\n        // placeholderMultipleChecked=\"Sorted\"\r\n        handleOnChange={(selected) => this.handleChange(selected)}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./GalleryNavBar.css\";\r\nimport { Navbar, Nav, InputGroup, FormControl } from \"react-bootstrap/\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport DropDownMultiSelect from \"../MultiSelectDropDown/DropdownMultiselect\";\r\n\r\nexport default function GalleryNavBar({ onChange, onSelect }) {\r\n  function handleSortCritera(criteria) {\r\n    const selection = Array(4).fill(false);\r\n    criteria.forEach((criterion) => (selection[criterion] = true));\r\n    onSelect(selection);\r\n  }\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand>\r\n        <FontAwesomeIcon className=\"fa-icon\" icon=\"film\" />\r\n      </Navbar.Brand>\r\n      <Navbar.Brand>Actors Gallery</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"search\">\r\n          <InputGroup\r\n            data-testid=\"navInput\"\r\n            onChange={(e) => (e.target.value.trim().length > 1 ? onChange(e.target.value.trim()) : onChange(\"\"))}\r\n          >\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"basic-addon1\">Filter By:</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              placeholder=\"First Name, Second Name or Age\"\r\n              aria-label=\"Username\"\r\n              aria-describedby=\"basic-addon1\"\r\n            />\r\n          </InputGroup>\r\n        </Nav>\r\n        <Nav className=\"navDivider\"></Nav>\r\n        <Nav>\r\n          <DropDownMultiSelect handleChange={handleSortCritera} />\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./ActorCard.css\";\r\n\r\nimport { Card } from \"react-bootstrap/\";\r\n\r\nexport default function ActorCard({ fname, lname, imgsrc, born, age }) {\r\n  return (\r\n    <Card className=\"text-center\">\r\n      <Card.Header>\r\n        <Card.Title\r\n          onClick={(e) => {\r\n            const title = e.target.innerText.split(\" \");\r\n            window.open(\"https://www.imdb.com/find?q=\".concat(`${title[0]}+${title[1]}`), \"_blank\");\r\n          }}\r\n        >\r\n          {fname} {lname} ({age})\r\n        </Card.Title>\r\n      </Card.Header>\r\n\r\n      <Card.Img variant=\"top\" src={imgsrc} alt={`${fname} ${lname}`} />\r\n\r\n      <Card.Body>\r\n        <Card.Text>{born}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./ActorsGallery.css\";\r\nimport _ from \"underscore\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap/\";\r\n\r\nimport GalleryNavbar from \"../GalleryNavBar/GalleryNavBar\";\r\nimport ActorCard from \"../ActorCard/ActorCard\";\r\n\r\nexport default function ActorsGallery({ actors, pathPre, rowSize }) {\r\n  const [searchPattern, setSearchPatter] = useState(\"\");\r\n  const [sortFields, setSortFields] = useState(Array(4).fill(false));\r\n\r\n  const regexp =\r\n    searchPattern.trim().length < 2 ? new RegExp(/.*/, \"i\") : new RegExp(searchPattern.trim().replace(/ /g, \"|\"), \"i\");\r\n\r\n  const actorsDataFiltered = actors\r\n    .filter((actor) => regexp.test(actor.fname) || regexp.test(actor.lname) || regexp.test(actor.age))\r\n    .sort((actor1, actor2) => sortAny(actor1, actor2))\r\n    .map((actor) => (\r\n      <Col key={uuidv4()}>\r\n        <ActorCard\r\n          key={uuidv4()}\r\n          fname={actor.fname}\r\n          lname={actor.lname}\r\n          imgsrc={pathPre.concat(actor.imgsrc)}\r\n          born={actor.born}\r\n          age={actor.age}\r\n        />\r\n      </Col>\r\n    ));\r\n\r\n  const actorsData2Display = _.chunk(actorsDataFiltered, rowSize).map((columns) => <Row key={uuidv4()}>{columns}</Row>);\r\n\r\n  function sortAny(actor1, actor2) {\r\n    let [isSortByFName, isSortByLName, isSortByAge, sortOrder] = sortFields;\r\n    sortOrder = sortOrder ? -1 : 1;\r\n    let sortResult = 0;\r\n\r\n    if (isSortByFName) {\r\n      sortResult = sortStrings(actor1.fname, actor2.fname);\r\n    }\r\n\r\n    if (isSortByLName && sortResult === 0) {\r\n      sortResult = sortStrings(actor1.lname, actor2.lname);\r\n    }\r\n\r\n    if (isSortByAge && sortResult === 0) {\r\n      sortResult = actor1.age - actor2.age;\r\n    }\r\n    return sortOrder * sortResult;\r\n  }\r\n\r\n  function sortStrings(str1, str2) {\r\n    if (str1 < str2) {\r\n      return -1;\r\n    }\r\n    if (str1 > str2) {\r\n      return 1;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <GalleryNavbar onChange={setSearchPatter} onSelect={setSortFields} />\r\n      <div data-testid=\"actorsGrid\">{actorsData2Display}</div>\r\n    </Container>\r\n  );\r\n}\r\n","export default class Actor {\r\n  constructor(fname, lname, born, imgsrc) {\r\n    this.fname = fname;\r\n    this.lname = lname;\r\n    this.born = born;\r\n    this.imgsrc = imgsrc;\r\n  }\r\n\r\n  get age() {\r\n    return this.calcAge();\r\n  }\r\n\r\n  calcAge() {\r\n    const re = new RegExp(/(?:^Born):\\s([a-zA-Z]+)\\s([0-9]{1,2}),\\s([0-9]{4,4})(?:.*)/, \"i\");\r\n    let matchGroups = [];\r\n    let res = 0;\r\n\r\n    if (re.test(this.born)) {\r\n      matchGroups = this.born.match(re);\r\n    }\r\n\r\n    if (matchGroups && matchGroups.length > 3) {\r\n      res =\r\n        new Date(Date.now() - Date.parse(`${matchGroups[1]} ${matchGroups[2]} ${matchGroups[3]}`)).getFullYear() - 1970;\r\n    }\r\n\r\n    return res;\r\n  }\r\n}\r\n","import ActorClass from \"../ActorCard/ActorClass\";\r\n\r\nconst getActors = () => actorsData.map((actor) => new ActorClass(actor.fname, actor.lname, actor.born, actor.imgsrc));\r\n\r\nconst actorsData = [\r\n  {\r\n    fname: \"Gal\",\r\n    lname: \"Gadot\",\r\n    imgsrc: \"/img/actors/GalGadot.jpg\",\r\n    born: \"Born: April 30, 1985 in Rosh Ha'ayin, Israel\",\r\n  },\r\n  {\r\n    fname: \"Gal\",\r\n    lname: \"Gadot\",\r\n    imgsrc: \"/img/actors/GalGadot.jpg\",\r\n    born: \"Born: July 14, 1981 in Rosh Ha'ayin, Israel\",\r\n  },\r\n  {\r\n    fname: \"Ben\",\r\n    lname: \"Affleck\",\r\n    imgsrc: \"/img/actors/BenAffleck.jpg\",\r\n    born: \"Born: August 15, 1972 in Berkeley, California, USA\",\r\n  },\r\n  {\r\n    fname: \"Jennifer\",\r\n    lname: \"Connelly\",\r\n    imgsrc: \"/img/actors/JenniferConnelly.jpg\",\r\n    born: \"Born: December 12, 1970 in Catskill Mountains, New York, USA\",\r\n  },\r\n  {\r\n    fname: \"Keanu\",\r\n    lname: \"Reeves\",\r\n    imgsrc: \"/img/actors/KeanuReeves.jpg\",\r\n    born: \"Born: September 2, 1964 in Beirut, Lebanon\",\r\n  },\r\n  {\r\n    fname: \"Keanu\",\r\n    lname: \"ZReeves\",\r\n    imgsrc: \"/img/actors/KeanuReeves.jpg\",\r\n    born: \"Born: September 2, 1965 in Beirut, Lebanon\",\r\n  },\r\n  {\r\n    fname: \"Christina\",\r\n    lname: \"Hendricks\",\r\n    imgsrc: \"/img/actors/ChristinaHendricks.jpg\",\r\n    born: \"Born: May 3, 1975 in Knoxville, Tennessee, USA\",\r\n  },\r\n  {\r\n    fname: \"Tom\",\r\n    lname: \"Hanks\",\r\n    imgsrc: \"/img/actors/TomHanks.jpg\",\r\n    born: \"Born: July 9, 1956 in Concord, California, USA\",\r\n  },\r\n  {\r\n    fname: \"Jonny\",\r\n    lname: \"Depp\",\r\n    imgsrc: \"/img/actors/JohnnyDepp.jpg\",\r\n    born: \"Born: June 9, 1963 in Owensboro, Kentucky, USA\",\r\n  },\r\n  {\r\n    fname: \"Anthony\",\r\n    lname: \"Mackie\",\r\n    imgsrc: \"/img/actors/AnthonyMackie.jpg\",\r\n    born: \"Born: September 23, 1978 in New Orleans, Louisiana, USA\",\r\n  },\r\n  {\r\n    fname: \"Wallis\",\r\n    lname: \"Day\",\r\n    imgsrc: \"/img/actors/WallisDay.jpg\",\r\n    born: \"Born: September 20, 1994 in London\",\r\n  },\r\n];\r\n\r\nexport { getActors };\r\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport ActorsGallery from \"./Components/ActorsGallery/ActorsGallery\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { faCheckSquare, faCoffee, faFilm } from \"@fortawesome/free-solid-svg-icons\";\nimport { getActors } from \"./Components/ActorsGallery/ActorsGalleryData\";\n\nlibrary.add(fab, faCheckSquare, faCoffee, faFilm);\n\nfunction App() {\n  const rowSize = 3;\n  const pathPre = process.env.PUBLIC_URL;\n\n  return <ActorsGallery actors={getActors()} pathPre={pathPre} rowSize={rowSize} />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}